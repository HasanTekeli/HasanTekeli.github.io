
JavaScript Notları


----------------------------------------
Types (JS'e girebileceğimiz elementler)
----------------------------------------
1. Number // matematik işlemleri yapabiliriz. Tek değişik olan % bu da bölümden kalan sayıyı verir (12 % 9 = 3). 
	Eğer eşittir işareti yapmak istersek === yapmamız gerekir. Tek = değişken atamaya yarıyor.

	!== Bu eşit değil anlamına geliyor. Ünlem işareti neyin başına gelirse onu olumsuz yapar.

2. String // Metin yazarken kullanılır. "" veya '' kullanılabilir. Metin içinde aynı işaretten varsa o işaretin önüne \ konulur (mesela 'She isn\'t lazy')

	- 10 + "34" = 1034 // Burada JS iki metni birleştirmeye çalıştığımızı düşünüyor. 10 - "3" = 7 burada da JS yanlış yazdığımızı ve ikincinin metin değil sayı olduğunu düşünüyor.

3. Boolean // True / False
	Örnek: 4 < 2 False

4. Undefined 
	- variable herhangi bir şeye atanmadığı zaman undefined olur.
	- Bunu mesela Signup formda e-posta ve şifre alanları için kullanabiliriz. Eğer veri undefined ise girilmesi gerektiğini hatırlatabliriz.

5. Null
6. Symbol (New in ECMAScript 6) //
7. Object

--------------
JS Comparisons
--------------
!== Eşit Değildir
=== Eşittir
>= Büyük / Eşit
<= Küçük / Eşit
> Büyük
< Küçük

------------
JS Variables
------------
var // 
	- var george = "These pretzels are making me thirsty" + "!" Burada george kelimesine "" içindeki metni atadık, bu sayede tüm metni tekrar yazmadan george yazdığımızda metin gelecektir. 
	- Değişkenler sayı ile başlayamaz, bir harf ve sayı olabilir.
	- Değişkenler simge olarak sadece $ veya _ ile başlayabilir.
	- Variable olarak herhangi bir Type'ı kullanabiliriz (Numbers, Booleans etc..)

Girdilerle Toplama yapımı
-------------------------
prompt() sayfanın üstünde metin girebileceğimiz bir kutu çıkartır.
alert() ise bir uyarı kutusu çıkartır. Bu ikisini kullanarak toplama yapabiliriz.
	- var first = prompt("enter first number");
	  var second = prompt("enter second number"); 
	  var sum = Number(first) + Number(second); 
	  alert("The sum is: " + sum);

prompt() ile girilen değerler metin olarak görünür. Bunların sayı olduğunu JS'e söylemek için Number() kullanılabilr.

------------
Control Flow - JS Conditionals
------------

IF
	
	var name = "Billy";
	if (name === "Billy") {
		alert("hi Billy!");
	};

ELSE (iki seçenek)

	if (name === "Billy") {
		alert("hi Billy");
	} else {
		alert("hmm I don't know you");
	}

ELSE IF (ikiden fazla seçenek)

	if (name === "Billy") {
		alert("hi Billy!");
	} else if (name === "Suzy") {
		alert("Hi Suzy");
	} else {
		alert("I don't know you");
	}

----------------------
Logical Operators
-----------------
&& and, iki seçenek de doğru olmak zorunda

	if (firstName === "Bob" && lastName === "Smith") {
		alert("Hi Bob Smith");
	}

|| or, iki seçenekten biri doğru olmak zorunda

	if (name === "Billy" || name === "Suzy") {
		alert("Hi Billy or Suzy");
	}

! not, verilen seçenek olmamalı
	
	if (!(name === "Bob")) {
		alert("Hi Bob");
	}


-------------
JS Functions
-------------
arguments, function'larda parantez içine yazılan şeyler (console.log(helloo)). Bazı functionlarda birden fazla argument yazılabilir.

İki farklı function oluşturma yöntemi var
- Function Declaration

	function sayHello() {
		console.log("Hello");
	}
	sayhello();

Function'ın ismi belli


- Function Expression

	var sayBye = function() {
		console.log("Bye");
	}
	sayBye();

Function'ın ismi belli değil, bu yüzden anonymous function deniyor.

------------------------

	function sing() {
		console.log("AHHHHHHHHHH");
		console.log("TEEEEEEEEEE");
	}
	sing();

Bunu kullandığımızda değiştirmek zor olur.

	function sing(song){
		console.log(song);
	}
	sing("Laaaa deeee ddaaaaa");
	sing("helllooooo");
	sing("daaaa daaaaa");

Bunu kullandığımızda daha extensible, daha kolay olabilir.

Başka bir örnek

	function multiply(a, b) {
		return a * b
	}
	multiply(5, 10);

Eğer function bir sonuç verecekse (mesela matematik işlemleri) return ile yapmamız lazım. Bir function'ın içinde birden fazla return yazarsak, ilk return'den sonrasını okumaz ve function'ı sonlandırır. Bu örneğe IF statement eklersek bu durum geçersiz kalır, mesela:

	function multiply(a, b) {
		if (a > 10 || b > 10) {
			return "that's too hard"
		} else {
			return a*b;
		}
	}

